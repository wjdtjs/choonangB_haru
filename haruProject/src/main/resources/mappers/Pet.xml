<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.haruProject.PetMapper">
	<select id="HJSelectMyPets" parameterType="int" resultType="Pet">
		SELECT pt.petno,
		pt.petname,
		pt.petbirth,
		pt.petimg,
		cm1.content species1,
		cm2.content species2,
		cm3.content gender,
		cm4.content status,
		a.ano
		FROM pet pt
		JOIN common cm1 ON pt.petspecies_bcd = cm1.bcd AND cm1.mcd = 999
		JOIN common cm2 ON pt.petspecies_bcd = cm2.bcd AND pt.petspecies_mcd= cm2.mcd
		JOIN common cm3 ON pt.petgender_bcd = cm3.bcd AND pt.petgender_mcd = cm3.mcd
		JOIN common cm4 ON pt.petstatus_bcd = cm4.bcd AND pt.petstatus_mcd = cm4.mcd
		LEFT OUTER JOIN admin a ON pt.ano = a.ano
		WHERE pt.memno = #{memno}
	</select>
	
	
	<!-- 마이페이지 > 동물 카드 정보 불러오기 -->
	<select id="HR_getPetList" parameterType="int" resultType="Pet">
		SELECT p.PETNO, p.PETNAME, p.PETIMG, c1.CONTENT as GENDER, p.PETGENDER_MCD, c2.CONTENT as SPECIES, p.PETBIRTH, p.MEMNO
		FROM PET p
		    JOIN COMMON c1 ON p.PETGENDER_BCD = c1.BCD AND p.PETGENDER_MCD = c1.MCD
		    JOIN COMMON c2 ON p.PETSPECIES_BCD = c2.BCD AND p.PETSPECIES_MCD = c2.MCD
		WHERE p.MEMNO = #{memno} AND p.petstatus_mcd = 100
		ORDER BY p.PETNO ASC
	</select>
	
	<select id="HR_getPetSpeciesBcd" resultType="Pet">
		SELECT bcd, mcd, content as species
		FROM common
		WHERE scd = 500
		    AND mcd = 999
	</select>
	
	<select id="HR_getPetSpeciesMcd" parameterType="int" resultType="Pet">
		SELECT c.bcd, c.mcd, c.content as species
		FROM common c
		WHERE c.bcd = #{bcd} and c.mcd != 999
		ORDER BY species
	</select>
	
	<!-- 동물 상세 페이지 -->
	<!-- 동물 정보 불러오기 -->
	<select id="HR_getPetDetail" parameterType="int" resultType="Pet">
		SELECT p.MEMNO, p.PETNO, p.PETNAME, p.PETIMG, c1.CONTENT as GENDER, p.PETGENDER_MCD, c2.CONTENT as SPECIES, p.PETBIRTH,
				p.PETSPECIES_BCD, p.PETSPECIES_MCD, p.PETSTATUS_MCD, p.PETHEIGHT, w.PETWEIGHT, p.PETSPECIAL
		FROM PET p
		    JOIN COMMON c1 ON p.PETGENDER_BCD = c1.BCD AND p.PETGENDER_MCD = c1.MCD
		    JOIN COMMON c2 ON p.PETSPECIES_BCD = c2.BCD AND p.PETSPECIES_MCD = c2.MCD
		    
		    LEFT OUTER JOIN (
			    SELECT petno, reg_date, petweight
			    FROM WEIGHT w1
			    WHERE reg_date = (SELECT MAX(reg_date) FROM WEIGHT w2 WHERE w1.petno = w2.petno)
			) w ON p.petno = w.petno
		WHERE p.PETNO = #{petno}
	</select>
	<!-- 동물 몸무게 불러오기 -->
	<select id="HR_getPetWeightList" parameterType="int" resultType="Weight">
		SELECT reg_date, petweight, petno, memno
		FROM WEIGHT
		WHERE petno = #{petno}
		ORDER BY reg_date desc
	</select>
	<!-- 동물별 예약 정보 불러오기 -->
	<select id="HR_getPAppointmentList" parameterType="int" resultType="Appointment">
		SELECT DISTINCT a.petno, a.resno, a.rdate, a.start_time, c2.content as mitem, m.mtitle_bcd, c.content as item, ch.resno as cresno, b.resno as bresno, ch.cno, b.bno
		FROM APPOINTMENT a
		    JOIN MEDICAL_ITEM m ON m.mcode = a.mcode
		    JOIN COMMON c ON m.mtitle_bcd = c.bcd AND m.mtitle_mcd = c.mcd
		    JOIN COMMON c2 ON m.mtitle_bcd = c2.bcd AND c2.mcd = 999
		    LEFT OUTER JOIN CHART ch ON a.resno = ch.resno
		    LEFT OUTER JOIN BOARD b ON a.resno = b.resno
		WHERE a.petno = #{petno} AND a.rstatus_mcd = 400
		ORDER BY rdate desc, start_time desc
	</select>
	
	<!-- 동물 정보 삭제하기 (상태 변경) -->
	<update id="HR_deletePet" parameterType="int">
		UPDATE PET SET petstatus_mcd = 200
		WHERE petno = #{petno}
	</update>

	<!-- 동물 추가 -->
	<insert id="HR_AddPet" parameterType="Pet">
		INSERT INTO PET (memno, petno, petname, petbirth, petheight, petweight, petspecial, petimg, ano,
						reg_date, update_date, petspecies_bcd, petspecies_mcd, petstatus_bcd, petstatus_mcd, petgender_bcd, petgender_mcd)
		VALUES(#{memno},
		        SEQ_PET.nextval,
		        #{petname},
				#{petbirth},
		        #{petheight},
		        #{petweight},
		       	<choose>
		       		<when test="petspecial != null and petspecial != ''">#{petspecial}</when>
		       		<otherwise>NULL</otherwise>
		       	</choose>
		        ,
		        #{petimg},
		        NULL,
		        sysdate,
		        NULL,
		        #{petspecies_bcd},
		        #{petspecies_mcd},
		        200,
		        100,
		        550,
		        #{petgender_mcd})
	</insert>
	<!-- 동물 추가 > 몸무게 추가 -->
	<insert id="HR_AddPetWeight" parameterType="Pet">
		INSERT INTO WEIGHT (MEMNO, PETNO, REG_DATE, PETWEIGHT)
		VALUES(#{memno}, SEQ_PET.currval, sysdate, #{petweight})
	</insert>
	
	<!-- 동물 수정 -->
	<update id="HR_updatePet" parameterType="Map">
		UPDATE PET SET
			MEMNO = #{pet.memno},
			PETNAME = #{pet.petname},
			PETBIRTH = #{pet.petbirth},
			PETSPECIAL = #{pet.petspecial},
			<if test="ic == true">
				PETIMG = #{pet.petimg},		
			</if>
			PETSPECIES_BCD = #{pet.petspecies_bcd},
			PETSPECIES_MCD = #{pet.petspecies_mcd},
			PETGENDER_MCD = #{pet.petgender_mcd}
		WHERE PETNO = #{pet.petno}
	</update>
	
	<!-- 몸무게 > 새롭게 update 된 몸무게 추가해주기 -->
	<insert id="HR_insertWeight" parameterType="Weight">
		INSERT INTO WEIGHT(MEMNO, PETNO, REG_DATE, PETWEIGHT)
		VALUES(#{memno}, #{petno}, sysdate, #{petweight})
	</insert>
	<!-- 몸무게 > pet 테이블에 petweight 업데이트 -->
	<update id="HR_update1Weight" parameterType="Weight">
		UPDATE PET SET
			PETWEIGHT = #{petweight}
		WHERE PETNO = #{petno}
	</update>
	
	<!-- 몸무게 페이지네이션 -->
	<select id="HR_selectWeightCnt" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM WEIGHT
		WHERE PETNO = #{petno}
	</select>
	<select id="HR_getPetWeightList_pn" parameterType="Map" resultType="Weight">
		SELECT *
		FROM (
		    SELECT ROWNUM rn, ww.*
		    FROM (
		        SELECT PETNO, MEMNO, REG_DATE, PETWEIGHT
				FROM WEIGHT
			WHERE PETNO = #{petno}
				ORDER BY reg_date DESC
		    )ww
		)
		WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 동물 전체 수 -->
	<select id="JS_SelectPetCount" parameterType="SearchItem" resultType="int">
		SELECT COUNT(*) FROM PET
		<if test="(search1 != null and !search1.equals('')) and (search2 != null and !search2.equals(''))">
			WHERE
			<choose>
				<when test="search1 == 'petname'">PETNAME LIKE '%' || #{search2} || '%'</when>
				<when test="search1 == 'mname'">
					MEMNO IN (
						SELECT MEMNO FROM MEMBER WHERE MNAME LIKE '%' || #{search2} || '%'
					)
				</when>
				<when test="search1 == 'all'">
					PETNAME LIKE '%' || #{search2} || '%'
					or
					MEMNO IN (
						SELECT MEMNO FROM MEMBER WHERE MNAME LIKE '%' || #{search2} || '%'
					)
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 동물 전체 리스트 -->
	<select id="JS_SelectPetList" parameterType="Map" resultType="Pet">
		SELECT *
		FROM (
			SELECT ROWNUM rn, P.*
			FROM (
				SELECT pp.MEMNO,
					pp.PETNO,
					pp.PETNAME,
					pp.PETBIRTH,
					pp.PETSPECIAL,
					pp.ANO,
					pp.PETSPECIES_BCD,
					pp.PETSPECIES_MCD,
					pp.PETSTATUS_BCD,
					pp.PETSTATUS_MCD,
					pp.PETGENDER_BCD,
					pp.PETGENDER_MCD,
					cm.CONTENT as species1,
					cm2.CONTENT as species2,
					DECODE(SUBSTR(cm3.MCD, 1, 1), 1, '암컷', '수컷') as gender1,
					DECODE(SUBSTR(cm3.MCD, 2, 1), 1, 'O', 'X') as gender2,
					m.MNAME as mname,
					a.ANAME as aname
				FROM PET pp 
                INNER JOIN COMMON cm ON
                    pp.PETSPECIES_BCD = cm.BCD AND cm.MCD = 999
                INNER JOIN COMMON cm2 ON    
                     pp.PETSPECIES_BCD = cm2.BCD AND pp.PETSPECIES_MCD = cm2.MCD
                INNER JOIN COMMON cm3 ON
                    pp.PETGENDER_BCD = cm3.BCD AND pp.PETGENDER_MCD = cm3.MCD
                INNER JOIN MEMBER m ON
                	pp.MEMNO = m.MEMNO
                LEFT OUTER JOIN ADMIN a ON
                	pp.ANO = a.ANO
                    
				<if test="(search1 != null and !search1.equals('')) and (search2 != null and !search2.equals(''))">
					WHERE
					<choose>
						<when test="search1 == 'petname'">pp.PETNAME LIKE '%' || #{search2} || '%'</when>
						<when test="search1 == 'mname'">
							pp.MEMNO IN (
								SELECT MEMBER.MEMNO FROM MEMBER
								INNER JOIN PET ON MEMBER.MEMNO = PET.MEMNO 
								WHERE MNAME LIKE '%' || #{search2} || '%'
							)
						</when>
						<when test="search1 == 'all'">
							pp.PETNAME LIKE '%' || #{search2} || '%'
							or
							pp.MEMNO IN (
								SELECT MEMBER.MEMNO FROM MEMBER
								INNER JOIN PET ON MEMBER.MEMNO = PET.MEMNO 
								WHERE MNAME LIKE '%' || #{search2} || '%'
							)
						</when>
					</choose>
				</if>
				
				ORDER BY 
		            PETNO DESC 
			) P
		)
		WHERE rn BETWEEN #{startRow} AND #{endRow} 
	</select>
	
	<!-- 동물 상세 -->
	<select id="JS_SelectPetDetail" parameterType="Pet" resultType="Pet">
		SELECT pp.MEMNO,
			pp.PETNO,
			pp.PETNAME,
			pp.PETBIRTH,
			pp.PETSPECIAL,
			pp.PETHEIGHT,
			pp.ANO,
			pp.PETSPECIES_BCD,
			pp.PETSPECIES_MCD,
			pp.PETSTATUS_BCD,
			pp.PETSTATUS_MCD,
			pp.PETGENDER_BCD,
			pp.PETGENDER_MCD,
			pp.REG_DATE,
			pp.UPDATE_DATE,
			cm.CONTENT as species1,
			cm2.CONTENT as species2,
			DECODE(SUBSTR(cm3.MCD, 1, 1), 1, '2', '1') as gender1,
			DECODE(SUBSTR(cm3.MCD, 2, 1), 1, '1', '2') as gender2,
			m.MNAME as mname,
			a.ANAME as aname
		FROM PET pp 
              INNER JOIN COMMON cm ON
                  pp.PETSPECIES_BCD = cm.BCD AND cm.MCD = 999
              INNER JOIN COMMON cm2 ON    
                   pp.PETSPECIES_BCD = cm2.BCD AND pp.PETSPECIES_MCD = cm2.MCD
              INNER JOIN COMMON cm3 ON
                  pp.PETGENDER_BCD = cm3.BCD AND pp.PETGENDER_MCD = cm3.MCD
              INNER JOIN MEMBER m ON
              	pp.MEMNO = m.MEMNO
              LEFT OUTER JOIN ADMIN a ON
              	pp.ANO = a.ANO
        WHERE PETNO = #{petno}
	</select>
	
	<!-- 관리자 - 동물 정보 수정 -->
	<update id="JS_UpdatePetInfo" parameterType="Pet">
		UPDATE PET SET
			PETNAME = #{petname},
			PETSPECIES_BCD = #{petspecies_bcd},
			PETSPECIES_MCD = #{petspecies_mcd},
			ANO = #{ano},
			PETSPECIAL = #{petspecial},
			PETHEIGHT = #{petheight},
			PETBIRTH = #{petbirth},
			PETGENDER_MCD = #{petgender_mcd},
			UPDATE_DATE = sysdate
		WHERE petno = #{petno}
	</update>
	
	<!-- 관리자 - 동물 추가 -->
	<insert id="JS_InsertPetInfo">
		INSERT ALL
			INTO PET(
				MEMNO,
				PETNO,
				PETNAME,
				PETBIRTH,
				PETHEIGHT,
				PETSPECIAL,
				ANO,
				PETSPECIES_BCD,
				PETSPECIES_MCD,
				PETGENDER_MCD
			) VALUES (
				#{memno}, SEQ_PET.NEXTVAL, #{petname}, #{petbirth}, #{petheight}, #{petspecial},
				#{ano}, #{petspecies_bcd}, #{petspecies_mcd}, #{petgender_mcd}
			)
			INTO WEIGHT(
				MEMNO,
				PETNO,
				PETWEIGHT
			) VALUES (#{memno}, SEQ_PET.CURRVAL, #{petweight})
		SELECT * FROM DUAL
		
	</insert>
	
</mapper>