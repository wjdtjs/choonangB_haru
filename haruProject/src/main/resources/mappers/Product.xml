<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.haruProject.ProductMapper">

	
	
	<!-- SELECT -->
	<!-- 필터 적용된 상품 리스트 수 조회 -->
	<select id="JS_SelectTotalProductCnt" parameterType="SearchItem" resultType="int">
		SELECT COUNT(*) FROM PRODUCT  
		<if test="(search1 != null and !search1.equals('')) or (search2 != null and !search2.equals(''))">
			WHERE
		</if>
		<if test="search1 != null and !search1.equals('')">
			PNAME LIKE '%' || #{search1} || '%'
		</if>
		<if test="(search1 != null and !search1.equals('')) and (search2 != null and !search2.equals(''))">
			AND
		</if>
		<if test="search2 != null and !search2.equals('')">
			PSTATUS_MCD = #{search2}
		</if>
	</select>
	
	<!-- 분류 필터 적용된 상품 리스트 수 -->
	<select id="JS_SelectCDFilterProductCnt" parameterType="SearchItem" resultType="int">
		SELECT COUNT(*) FROM PRODUCT
		WHERE PSTATUS_MCD = #{search4}
			AND PSTEP_BCD = #{type4}
			<if test="type5 != 999">				
				AND PSTEP_MCD = #{type5}
			</if>
	</select>
	
	<!-- 상품 상태 공통데이터 종류 조회 
		(SCD - 300: 노출여부 | MCD - 100:노출, 200:비노출) 
	-->
	<select id="JS_SelectCommonStatus" resultType="Map">
		SELECT CONTENT, BCD, MCD
		FROM COMMON
		WHERE SCD = 300 AND MCD IN (100, 200)
	</select>
	
	<!-- 상품 분류 공통데이터 종류 조회 
		(SCD - 400: 상품종류)
	-->
	<select id="JS_SelectProductBCD" resultType="Map">
		SELECT CONTENT, BCD
		FROM COMMON
		WHERE SCD = 400 AND MCD = 999
	</select>
	
	<!-- 상품 분류 공통데이터 중분류 조회 
	-->
	<select id="JS_SelectProductMCD" parameterType="int" resultType="Map">
		SELECT CONTENT, MCD
		FROM COMMON
		WHERE BCD = #{bcd} AND MCD != 999
	</select>

	<!-- 상품 리스트 조회 -->
	<select id="JS_SelectProductList" parameterType="Map" resultType="Product">
		SELECT *
		FROM (
			SELECT ROWNUM rn, p.*
			FROM (
				SELECT PNO, PNAME, PPRICE, REG_DATE, PBRAND, cm.CONTENT as status, PQUANTITY, PSTEP_BCD, PSTEP_MCD
				FROM PRODUCT pp INNER JOIN COMMON cm
				ON
				pp.PSTATUS_BCD = cm.BCD AND pp.PSTATUS_MCD = cm.MCD
				<if test="search.search1 != null and !search.search1.equals('')">
					AND PNAME LIKE '%' || #{search.search1} || '%'
				</if>
				<if test="search.search2 != null and !search.search2.equals('')">
					AND PSTATUS_MCD = #{search.search2}
				</if>
				ORDER BY TO_NUMBER(PNO) DESC
			) p
		)
		WHERE rn BETWEEN #{startRow} AND #{endRow} 
	</select>
	
	<!-- 분류 필터 적용된 상품 리스트 조회 -->
	<select id="JS_SelectCDFilterProductList" parameterType="Map" resultType="Product">
		SELECT *
		FROM (
			SELECT ROWNUM rn, p.*
			FROM (
				SELECT 
					PNO,
					PNAME,
					PPRICE,
					PBRAND,
					PIMG_MAIN,
					PSTATUS_BCD,
					PQUANTITY,
					PSTEP_BCD,
					PSTEP_MCD,
					PSTATUS_MCD
				FROM PRODUCT
				WHERE PSTATUS_MCD = #{search.search4}
					AND PSTEP_BCD = #{search.type4}
					<if test="search.type5 != 999">				
						AND PSTEP_MCD = #{search.type5}
					</if>
				ORDER BY TO_NUMBER(PNO) DESC
			) p
		)
		WHERE rn BETWEEN #{startRow} AND #{endRow} 
	</select>
	
	<!-- 상품상세 조회 -->
	<select id="JS_SelectProductDetail" parameterType="java.lang.String" resultType="Product">
		SELECT PNO, PNAME, PPRICE, PBUY_STORE, PIMG_MAIN, UPDATE_DATE, PBRAND, PDETAILS, PSTATUS_BCD, PSTATUS_MCD, PQUANTITY, PSTEP_BCD, PSTEP_MCD
		FROM PRODUCT
		WHERE PNO = #{pno}
	</select>
	
	<!-- 쇼핑카트에 담아둔 상품 수 조회 -->
	<select id="JS_SelectCartCount" parameterType="int" resultType="int">
		SELECT SUM(SQUANTITY) FROM SHOPPING_CART WHERE MEMNO = #{memno}
	</select>
	
	<select id="JS_ProductReviesCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE BSTATUS_MCD = 100
			AND BOARD_TYPE_MCD = 300
			AND PNO = #{pno}
	</select>
	
	<!-- 상품 후기 조회 
		(BSTATUS_MCD = 100: 노출, 
		 BOARD_TYPE_MCD = 300: 상품후기)
	-->
	<select id="JS_ProductReviews" parameterType="Map" resultType="Board">
		SELECT *
		FROM (
			SELECT ROWNUM rn, p.*
			FROM (
				SELECT 
					b.BNO,
					b.BTITLE,
					b.BCONTENTS,
					b.BGROUP,
					b.BSEQ,
					b.BLEVEL,
					b.REG_DATE,
					b.PNO,
					b.BIMG,
					b.BOARD_TYPE_BCD,
					b.BOARD_TYPE_MCD,
					b.MEMNO,
					mask_email(m.MEMAIL) as memail
				FROM BOARD b 
				INNER JOIN MEMBER m
					ON b.MEMNO = m.MEMNO
					AND b.BSTATUS_MCD = 100
					AND b.BOARD_TYPE_MCD = 300
					AND b.PNO = #{pno}
					
				ORDER BY b.REG_DATE DESC
			) p
		)
		WHERE rn BETWEEN #{startRow} AND #{endRow} 
		
	</select>
	<!-- End SELECT -->
	
	
	<!-- INSERT -->
	<!-- 상품 등록 -->
	<insert id="JS_InsertProduct" parameterType="Product">
		INSERT INTO PRODUCT(
			PNO, PNAME, PPRICE, PBUY_STORE, PIMG_MAIN, PBRAND, PDETAILS, PQUANTITY, PSTEP_BCD, PSTEP_MCD, ANO
		) VALUES(
			SEQ_PRO.NEXTVAL, 
			#{pname}, 
			#{pprice}, 
			#{pbuy_store}, 
			#{pimg_main}, 
			#{pbrand}, 
			#{pdetails}, 
			#{pquantity}, 
			#{pstep_bcd}, 
			#{pstep_mcd},
			null
		)
	</insert>
	<!-- End INSERT -->
	
	<!-- UPDATE -->
	<!-- 상품 수정 -->
	<update id="JS_UpdateProduct" parameterType="Map">
		UPDATE PRODUCT SET
			PNAME = #{pd.pname},
			PPRICE = #{pd.pprice},
			PBUY_STORE = #{pd.pbuy_store},
		<if test="ic == true">
			PIMG_MAIN = #{pd.pimg_main},		
		</if>
			PBRAND = #{pd.pbrand},
			PDETAILS = #{pd.pdetails},
			PQUANTITY = #{pd.pquantity},
			PSTEP_BCD = #{pd.pstep_bcd},
			PSTEP_MCD = #{pd.pstep_mcd},
			PSTATUS_MCD = #{pd.pstatus_mcd},
			UPDATE_DATE = sysdate
		WHERE PNO = #{pd.pno}
	</update>
	
</mapper>